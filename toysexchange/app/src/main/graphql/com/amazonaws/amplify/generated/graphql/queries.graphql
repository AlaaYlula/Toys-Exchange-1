# this is an auto generated file. This will be overwritten
query GetToy($id: ID!) {
  getToy(id: $id) {
    id
    toyname
    toydescription
    image
    price
    condition
    wishuser {
      nextToken
      startedAt
    }
    contactinfo
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
<<<<<<< HEAD
    usersToysId
=======
    accountToysId
>>>>>>> 730f96100f2d16fb43d3a01143a353a5b81ee0f4
  }
}
query ListToys($filter: ModelToyFilterInput, $limit: Int, $nextToken: String) {
  listToys(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      toyname
      toydescription
      image
      price
      condition
      contactinfo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountToysId
    }
    nextToken
    startedAt
  }
}
query SyncToys(
  $filter: ModelToyFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncToys(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      toyname
      toydescription
      image
      price
      condition
      contactinfo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountToysId
    }
    nextToken
    startedAt
  }
}
query GetStore($id: ID!) {
  getStore(id: $id) {
    id
    storename
    storedescription
    latitude
    longitude
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    accountStoresId
  }
}
query ListStores(
  $filter: ModelStoreFilterInput
  $limit: Int
  $nextToken: String
) {
  listStores(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      storename
      storedescription
      latitude
      longitude
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
<<<<<<< HEAD
      usersStoresId
=======
      accountStoresId
>>>>>>> 730f96100f2d16fb43d3a01143a353a5b81ee0f4
    }
    nextToken
    startedAt
  }
}
query SyncStores(
  $filter: ModelStoreFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncStores(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      storename
      storedescription
      latitude
      longitude
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountStoresId
    }
    nextToken
    startedAt
  }
}
query GetComment($id: ID!) {
  getComment(id: $id) {
    id
    text
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    accountCommentsId
    eventCommentsId
  }
}
query ListComments(
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
) {
  listComments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      text
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountCommentsId
      eventCommentsId
    }
    nextToken
    startedAt
  }
}
query SyncComments(
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      text
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountCommentsId
      eventCommentsId
    }
    nextToken
    startedAt
  }
}
query GetAccount($id: ID!) {
  getAccount(id: $id) {
    id
    idcognito
    username
    toys {
      nextToken
      startedAt
    }
    comments {
      nextToken
      startedAt
    }
    stores {
<<<<<<< HEAD
=======
      nextToken
      startedAt
    }
    eventsadded {
      nextToken
      startedAt
    }
    eventsattend {
      nextToken
      startedAt
    }
    wishtoys {
>>>>>>> 730f96100f2d16fb43d3a01143a353a5b81ee0f4
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAccounts(
  $filter: ModelAccountFilterInput
  $limit: Int
  $nextToken: String
) {
  listAccounts(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      idcognito
      username
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAccounts(
  $filter: ModelAccountFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAccounts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      idcognito
      username
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetEvent($id: ID!) {
  getEvent(id: $id) {
    id
    title
    eventdescription
    comments {
      nextToken
      startedAt
    }
<<<<<<< HEAD
    users {
=======
    usersattend {
>>>>>>> 730f96100f2d16fb43d3a01143a353a5b81ee0f4
      nextToken
      startedAt
    }
    latitude
    longitude
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    accountEventsaddedId
  }
}
query ListEvents(
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
) {
  listEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      title
      eventdescription
      latitude
      longitude
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountEventsaddedId
    }
    nextToken
    startedAt
  }
}
query SyncEvents(
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncEvents(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      eventdescription
      latitude
      longitude
<<<<<<< HEAD
=======
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountEventsaddedId
    }
    nextToken
    startedAt
  }
}
query GetUserWishList($id: ID!) {
  getUserWishList(id: $id) {
    id
    toyID
    accountID
    toy {
      id
      toyname
      toydescription
      image
      price
      condition
      contactinfo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountToysId
    }
    account {
      id
      idcognito
      username
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUserWishLists(
  $filter: ModelUserWishListFilterInput
  $limit: Int
  $nextToken: String
) {
  listUserWishLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      toyID
      accountID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUserWishLists(
  $filter: ModelUserWishListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUserWishLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      toyID
      accountID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUserAttendEvent($id: ID!) {
  getUserAttendEvent(id: $id) {
    id
    accountID
    eventID
    account {
      id
      idcognito
      username
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    event {
      id
      title
      eventdescription
      latitude
      longitude
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      accountEventsaddedId
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUserAttendEvents(
  $filter: ModelUserAttendEventFilterInput
  $limit: Int
  $nextToken: String
) {
  listUserAttendEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      accountID
      eventID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUserAttendEvents(
  $filter: ModelUserAttendEventFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUserAttendEvents(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      accountID
      eventID
>>>>>>> 730f96100f2d16fb43d3a01143a353a5b81ee0f4
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
